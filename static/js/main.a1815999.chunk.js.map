{"version":3,"sources":["PageNavLink.tsx","components/Navigation/Navigation.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/SinglePerson/SinglePerson.tsx","components/PeopleTable/peopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/HomePage/homePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classnames","Navigation","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","name","sex","classNames","SinglePerson","isSelected","died","fatherName","born","father","mother","motherName","PeopleTable","people","selectedPerson","isSelectedPerson","map","Loader","PeoplePage","useState","isLoading","setIsLoading","errorMessage","setErrorMessage","setPeople","useParams","personSlug","dowloadPeople","getPeopleFromServer","peopleArray","personCopy","find","dad","mom","message","useEffect","length","NotFoundPage","HomePage","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a1815999.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype PageNavLinkProps = {\n  to: string,\n  title: string;\n};\n\nexport const PageNavLink: FC<PageNavLinkProps> = ({ to, title }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classnames('navbar-item',\n        { 'has-background-grey-lighter': isActive })}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from '../../PageNavLink';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype PersonLinkProps = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<PersonLinkProps> = ({ person }) => {\n  const {\n    slug,\n    name,\n    sex,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person;\n  isSelected: boolean;\n};\n\nexport const SinglePerson: React.FC<Props> = ({ person, isSelected }) => {\n  const {\n    died,\n    fatherName,\n    born,\n    father,\n    slug,\n    mother,\n    sex,\n    motherName,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { SinglePerson } from '../SinglePerson/SinglePerson';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[],\n  selectedPerson: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedPerson,\n}) => {\n  const isSelectedPerson = (person: Person) => (\n    person.slug === selectedPerson\n  );\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <SinglePerson person={person} isSelected={isSelectedPerson(person)} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/peopleTable';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [people, setPeople] = useState<Person[]>([]);\n  const { personSlug = '' } = useParams();\n\n  const dowloadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const getPeopleFromServer = await getPeople();\n\n      const peopleArray = getPeopleFromServer.map((person) => {\n        const personCopy = { ...person };\n\n        const father = getPeopleFromServer.find((dad) => (\n          dad.name === person.fatherName\n        ));\n\n        const mother = getPeopleFromServer.find((mom) => (\n          mom.name === person.motherName\n        ));\n\n        if (father) {\n          personCopy.father = father;\n        }\n\n        if (mother) {\n          personCopy.mother = mother;\n        }\n\n        return personCopy;\n      });\n\n      setPeople(peopleArray);\n    } catch (error) {\n      setErrorMessage((error as Error).message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    dowloadPeople();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {people.length > 0 && !isLoading && !errorMessage\n            && <PeopleTable people={people} selectedPerson={personSlug} />}\n\n          {people.length === 0 && !isLoading && !errorMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {errorMessage\n            && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { HomePage } from './components/HomePage/homePage';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<HomePage />}\n        />\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route\n          path=\"*\"\n          element={<NotFoundPage />}\n        />\n      </Routes>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}